/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _STORAGE_H_RPCGEN
#define _STORAGE_H_RPCGEN

#include <rpc/rpc.h>

#include <pthread.h>

#ifdef __cplusplus
extern "C" {
#endif

#define MAX_NUM_OF_FILES 4096
#define MAX_NUM_OF_USERS 4096

struct file {
	char filename[257];
};
typedef struct file file;

typedef struct {
	u_int files_list_len;
	file *files_list_val;
} files_list;

struct user {
	char username[257];
	char ip[16];
	char port[6];
};
typedef struct user user;

typedef struct {
	u_int users_list_len;
	user *users_list_val;
} users_list;

struct add_connected_user_1_argument {
	char *username;
	char *in_addr;
	char *port;
};
typedef struct add_connected_user_1_argument add_connected_user_1_argument;

struct add_file_1_argument {
	char *username;
	char *file_name;
	char *description;
};
typedef struct add_file_1_argument add_file_1_argument;

struct delete_file_1_argument {
	char *username;
	char *file_name;
};
typedef struct delete_file_1_argument delete_file_1_argument;

#define STORAGE 0x20000000
#define STORAGE_VER 1

#if defined(__STDC__) || defined(__cplusplus)
#define setup 1
extern  enum clnt_stat setup_1(int *, CLIENT *);
extern  bool_t setup_1_svc(int *, struct svc_req *);
#define shutdown 2
extern  enum clnt_stat shutdown_1(int *, CLIENT *);
extern  bool_t shutdown_1_svc(int *, struct svc_req *);
#define add_user 3
extern  enum clnt_stat add_user_1(char *, int *, CLIENT *);
extern  bool_t add_user_1_svc(char *, int *, struct svc_req *);
#define delete_user 4
extern  enum clnt_stat delete_user_1(char *, int *, CLIENT *);
extern  bool_t delete_user_1_svc(char *, int *, struct svc_req *);
#define add_connected_user 5
extern  enum clnt_stat add_connected_user_1(char *, char *, char *, int *, CLIENT *);
extern  bool_t add_connected_user_1_svc(char *, char *, char *, int *, struct svc_req *);
#define delete_connected_user 6
extern  enum clnt_stat delete_connected_user_1(char *, int *, CLIENT *);
extern  bool_t delete_connected_user_1_svc(char *, int *, struct svc_req *);
#define get_connected_users 7
extern  enum clnt_stat get_connected_users_1(users_list *, CLIENT *);
extern  bool_t get_connected_users_1_svc(users_list *, struct svc_req *);
#define add_file 8
extern  enum clnt_stat add_file_1(char *, char *, char *, int *, CLIENT *);
extern  bool_t add_file_1_svc(char *, char *, char *, int *, struct svc_req *);
#define delete_file 9
extern  enum clnt_stat delete_file_1(char *, char *, int *, CLIENT *);
extern  bool_t delete_file_1_svc(char *, char *, int *, struct svc_req *);
#define get_files 10
extern  enum clnt_stat get_files_1(char *, files_list *, CLIENT *);
extern  bool_t get_files_1_svc(char *, files_list *, struct svc_req *);
#define is_registered 11
extern  enum clnt_stat is_registered_1(char *, int *, CLIENT *);
extern  bool_t is_registered_1_svc(char *, int *, struct svc_req *);
#define is_connected 12
extern  enum clnt_stat is_connected_1(char *, int *, CLIENT *);
extern  bool_t is_connected_1_svc(char *, int *, struct svc_req *);
extern int storage_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define setup 1
extern  enum clnt_stat setup_1();
extern  bool_t setup_1_svc();
#define shutdown 2
extern  enum clnt_stat shutdown_1();
extern  bool_t shutdown_1_svc();
#define add_user 3
extern  enum clnt_stat add_user_1();
extern  bool_t add_user_1_svc();
#define delete_user 4
extern  enum clnt_stat delete_user_1();
extern  bool_t delete_user_1_svc();
#define add_connected_user 5
extern  enum clnt_stat add_connected_user_1();
extern  bool_t add_connected_user_1_svc();
#define delete_connected_user 6
extern  enum clnt_stat delete_connected_user_1();
extern  bool_t delete_connected_user_1_svc();
#define get_connected_users 7
extern  enum clnt_stat get_connected_users_1();
extern  bool_t get_connected_users_1_svc();
#define add_file 8
extern  enum clnt_stat add_file_1();
extern  bool_t add_file_1_svc();
#define delete_file 9
extern  enum clnt_stat delete_file_1();
extern  bool_t delete_file_1_svc();
#define get_files 10
extern  enum clnt_stat get_files_1();
extern  bool_t get_files_1_svc();
#define is_registered 11
extern  enum clnt_stat is_registered_1();
extern  bool_t is_registered_1_svc();
#define is_connected 12
extern  enum clnt_stat is_connected_1();
extern  bool_t is_connected_1_svc();
extern int storage_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_file (XDR *, file*);
extern  bool_t xdr_files_list (XDR *, files_list*);
extern  bool_t xdr_user (XDR *, user*);
extern  bool_t xdr_users_list (XDR *, users_list*);
extern  bool_t xdr_add_connected_user_1_argument (XDR *, add_connected_user_1_argument*);
extern  bool_t xdr_add_file_1_argument (XDR *, add_file_1_argument*);
extern  bool_t xdr_delete_file_1_argument (XDR *, delete_file_1_argument*);

#else /* K&R C */
extern bool_t xdr_file ();
extern bool_t xdr_files_list ();
extern bool_t xdr_user ();
extern bool_t xdr_users_list ();
extern bool_t xdr_add_connected_user_1_argument ();
extern bool_t xdr_add_file_1_argument ();
extern bool_t xdr_delete_file_1_argument ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_STORAGE_H_RPCGEN */
